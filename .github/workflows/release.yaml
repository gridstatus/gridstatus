on:
  release:
    types: [published]

name: Release
jobs:
  test-release:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Configure Poetry for TestPyPI
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry config http-basic.testpypi ${{ secrets.TEST_PYPI_USERNAME }} ${{ secrets.TEST_PYPI_PASSWORD }}

    - name: Install dependencies
      run: poetry install

    - name: Build package
      run: poetry build

    - name: Publish package to TestPyPI
      run: poetry publish --repository testpypi

  pypi-release:
    runs-on: ubuntu-latest
    needs: test-release
    if: github.event.inputs.publish_to_pypi == 'yes'
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Check version match
      run: |
        PACKAGE_VERSION=$(poetry version -s)
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
          echo "Package version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION)"
          exit 1
        fi

    - name: Configure Poetry for PyPI
      run: |
        poetry config http-basic.pypi ${{ secrets.PYPI_USERNAME }} ${{ secrets.PYPI_PASSWORD }}

    - name: Install dependencies
      run: poetry install

    - name: Build package
      run: poetry build

    - name: Publish package to PyPI
      run: poetry publish
